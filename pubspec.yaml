name: mobile
description: A Final Project at HCMUS

# The following line prevents the package from being accidentally published to
# pub.dev using `flutter pub publish`. This is preferred for private packages.
publish_to: 'none' # Remove this line if you wish to publish to pub.dev

# The following defines the version and build number for your application.
# A version number is three numbers separated by dots, like 1.2.43
# followed by an optional build number separated by a +.
# Both the version and the builder number may be overridden in flutter
# build by specifying --build-name and --build-number, respectively.
# In Android, build-name is used as versionName while build-number used as versionCode.
# Read more about Android versioning at https://developer.android.com/studio/publish/versioning
# In iOS, build-name is used as CFBundleShortVersionString while build-number used as CFBundleVersion.
# Read more about iOS versioning at
# https://developer.apple.com/library/archive/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html
version: 1.4.0+2.3.0

environment:
  sdk: ">=2.15.1 <3.0.0"

# Dependencies specify other packages that your package needs in order to work.
# To automatically upgrade your package dependencies to the latest versions
# consider running `flutter pub upgrade --major-versions`. Alternatively,
# dependencies can be manually updated by changing the version numbers below to
# the latest version available on pub.dev. To see which dependencies have newer
# versions available, run `flutter pub outdated`.
dependencies:
  flutter:
    sdk: flutter


  # The following adds the Cupertino Icons font to your application.
  # Use with the CupertinoIcons class for iOS style icons.
  cupertino_icons: ^1.0.5 

  # A powerful Http client for Dart
  dio: ^4.0.6

  # MobX is a library for reactively managing the state of your applications. Use the power of
  # observables, actions, and reactions to supercharge your Dart and Flutter apps.
  mobx: ^2.0.7+4 
  flutter_mobx: ^2.0.6+1 

  # An helper to easily exposes a value using InheritedWidget without having to write one.
  provider: ^6.0.3 

  # String validation and sanitization for Dart. Dart 2-compatible version of validator
  validators: ^3.0.0 

  # The following adds the shared pref as a dependency in your application
  shared_preferences: ^2.0.15 

  # A composable, Future-based library for making HTTP requests.
  http: ^0.13.4 

  # A flexible widget for user notification. Customize your text, button, duration, animations
  # and much more. For Android devs, it is made to replace Snackbars and Toasts.
  another_flushbar: ^1.10.29

  # Material Dialog
  material_dialogs: ^1.1.3

  # This package provides internationalization and localization facilities, including message
  # translation, plurals and genders, date/number formatting and parsing, and bidirectional text.
  intl: ^0.17.0 

  # XXTEA is a fast and secure encryption algorithm. This is a XXTEA library for Dart.
  xxtea: ^2.1.0 

  # An helper to easily exposes a value using InheritedWidget without having to write one.
  # sembast: 
  path_provider: ^2.0.11 

  # for dependency injection
  get_it: ^7.2.0 

  #this lib is for build 'JSON and serialization'
  json_annotation: ^4.6.0

  # Draw SVG (and some Android VectorDrawable (XML)) files on a Flutter Widget.
  flutter_svg: any

  # A Flutter plugin for Google Sign In.
  # scope: https://developers.google.com/identity/protocols/oauth2/scopes
  google_sign_in: ^5.4.0

  # Authenticate for facebook
  # flutter_facebook_auth: 

  # A Flutter package for easy implementation of curved navigation bar.
  curved_navigation_bar: ^1.0.3

  # a widget provided to the flutter scroll component drop-down refresh and pull up load.
  pull_to_refresh_flutter3: ^2.0.1

  # A flutter library to show images from the internet and keep them in the cache directory.
  cached_network_image: ^3.2.1

  # This Flutter plugin provides an API for querying information about an application package.
  package_info_plus: ^1.4.2

  # more icon for application
  font_awesome_flutter: ^10.1.0

  # to ago string
  timeago: ^3.2.2 

  # favourite mentor button
  like_button: ^2.0.4 

  # readmore text
  readmore: ^2.2.0

  # Being able to compare objects in Dart often involves having to override the == operator as well as hashCode.
  equatable: ^2.0.3 

  # progress bar
  circle_progress_bar: ^0.1.2 

  # slider stepper
  introduction_screen: ^3.0.2 

  # user infor
  image_picker: ^0.8.5+3

  # read session html content
  flutter_html: ^2.2.1

  # realtime receive and send data from server
  socket_io_client: ^2.0.0

  # grouped list
  sticky_grouped_list: ^3.1.0

  # animated icon
  lottie: ^1.3.0

  shimmer: ^2.0.0 

  #schedule
  table_calendar: ^3.0.6

  # chat implement
  flutter_chat_ui: ^1.6.3
  flutter_chat_types: ^3.4.3

  # chart
  fl_chart: ^0.55.0

  tuple: ^2.0.0

  flutter_localizations:
    sdk: flutter

dev_dependencies:
  flutter_test:
    sdk: flutter

  # The "flutter_lints" package below contains a set of recommended lints to
  # encourage good coding practices. The lint set provided by the package is
  # activated in the `analysis_options.yaml` file located at the root of your
  # package. See that file for information about deactivating specific lint
  # rules and activating additional ones.
  flutter_lints: ^1.0.0

  # The following adds the launcher icon support to your application.
  # run below mentioned commands to generate launcher icons
  # flutter packages get
  # flutter packages pub run flutter_launcher_icons:main
  # build app icon with statement: `flutter clean && flutter pub get && flutter pub run flutter_launcher_icons:main` in terminal
  flutter_launcher_icons: ^0.9.3 
  mobx_codegen: ^2.0.7
  json_serializable: ^6.3.1  # for create json builder
  build_runner: ^2.2.0
  # use command `flutter pub run build_runner build --delete-conflicting-outputs` to run 
  analyzer: ^4.2.0 


flutter_icons:
  image_path: "assets/icons/ic_appicon.png"
  android: true
  ios: true
  remove_alpha_ios: true


# For information on the generic Dart part of this file, see the
# following page: https://dart.dev/tools/pub/pubspec

# The following section is specific to Flutter.
flutter:

  # The following line ensures that the Material Icons font is
  # included with your application, so that you can use the icons in
  # the material Icons class.
  uses-material-design: true

  # To add assets to your application, add an assets section, like this:
  # assets:
  assets:
    - assets/images/
    - assets/icons/
    - assets/icons/payment_method/
    - assets/lang/
    - assets/lottiefiles/
    - assets/svg/
    # - images/a_dot_burr.jpeg
  #   - images/a_dot_ham.jpeg

  # An image asset can refer to one or more resolution-specific "variants", see
  # https://flutter.dev/assets-and-images/#resolution-aware.

  # For details regarding adding assets from package dependencies, see
  # https://flutter.dev/assets-and-images/#from-packages

  # To add custom fonts to your application, add a fonts section here,
  # in this "flutter" section. Each entry in this list should have a
  # "family" key with the font family name, and a "fonts" key with a
  # list giving the asset and other descriptors for the font. For
  # example:
  # fonts:
  #   - family: Schyler
  #     fonts:
  #       - asset: fonts/Schyler-Regular.ttf
  #       - asset: fonts/Schyler-Italic.ttf
  #         style: italic
  #   - family: Trajan Pro
  #     fonts:
  #       - asset: fonts/TrajanPro.ttf
  #       - asset: fonts/TrajanPro_Bold.ttf
  #         weight: 700
  #
  # For details regarding fonts from package dependencies,
  # see https://flutter.dev/custom-fonts/#from-packages

# `flutter build appbundle --no-shrink`